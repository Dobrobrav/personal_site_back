# Generated by Django 4.1.5 on 2023-01-25 09:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=60, verbose_name='Страна')),
                ('region', models.CharField(blank=True, max_length=60, null=True, verbose_name='Регион (область)')),
                ('locality', models.CharField(max_length=70, verbose_name='Населенный пункт')),
                ('street_name', models.CharField(max_length=130, verbose_name='Улица')),
                ('street_number', models.IntegerField(verbose_name='Дом')),
                ('apartment_number', models.IntegerField(blank=True, null=True, verbose_name='Номер')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='ContactDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Почта')),
                ('telephone_extension', models.CharField(blank=True, max_length=10, null=True, verbose_name='Внутренний телефон')),
                ('work_phone_number', models.CharField(blank=True, max_length=17, null=True, verbose_name='Рабочий телефон')),
                ('additional_phone_number', models.CharField(blank=True, max_length=17, null=True, verbose_name='Дополнительный телефон')),
                ('telegram_name', models.CharField(blank=True, max_length=35, null=True, verbose_name='Название телеграм-аккаунта')),
                ('link_to_telegram', models.URLField(blank=True, null=True, verbose_name='Ссылка на телеграм-аккаунт')),
                ('link_to_vk', models.URLField(blank=True, null=True, verbose_name='Ссылка на ВК-аккаунт')),
                ('link_to_youtube', models.URLField(blank=True, null=True, verbose_name='Ссылка на ютуб-канал')),
            ],
            options={
                'verbose_name': 'Контактные данные',
                'verbose_name_plural': 'Контактные данные',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Отдел',
                'verbose_name_plural': 'Отделы',
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postcode', models.IntegerField(verbose_name='Почтовый индекс')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='personal_info.address', verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Офис',
                'verbose_name_plural': 'Офисы',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('link_to_photo', models.URLField(blank=True, null=True, verbose_name='Ссылка на фото')),
                ('contact_details', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='personal_info.contactdetails', verbose_name='Контактные данные')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='personal_info.department', verbose_name='Отдел')),
                ('office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='personal_info.office', verbose_name='Офис')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('link_to_picture', models.URLField(blank=True, null=True, verbose_name='Ссылка на картинку')),
                ('profiles', models.ManyToManyField(related_name='interests', to='personal_info.profile', verbose_name='Профили')),
            ],
            options={
                'verbose_name': 'Интерес',
                'verbose_name_plural': 'Интересы',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_to_picture', models.URLField(blank=True, null=True, verbose_name='Ссылка на картинку')),
                ('profiles', models.ManyToManyField(related_name='certificates', to='personal_info.profile', verbose_name='Профили')),
            ],
            options={
                'verbose_name': 'Сертификат',
                'verbose_name_plural': 'Сертификаты',
                'ordering': ['id'],
            },
        ),
    ]
